on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

name: Automated Release and Deployment

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: main  
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      body: ${{ steps.release.outputs.body }}
         
  # This job will trigger when a new release is created from any branch
  deploy-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/prod-deploy.yaml
    with:
      tag_name: ${{ needs.release-please.outputs.tag_name }}

  # This job will post release notes to Slack when a release is created
  slack-notification:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Debug release-please outputs
        run: |
          echo "=== Release Please Outputs Debug ==="
          echo "release_created: '${{ needs.release-please.outputs.release_created }}'"
          echo "tag_name: '${{ needs.release-please.outputs.tag_name }}'"
          echo "body: '${{ needs.release-please.outputs.body }}'"
          echo "=== End Debug ==="
          
          echo "=== Raw body content (hex dump) ==="
          echo "${{ needs.release-please.outputs.body }}" | hexdump -C
          echo "=== End hex dump ==="
          
          echo "=== Body content length ==="
          echo "${{ needs.release-please.outputs.body }}" | wc -c
          echo "=== End length ==="
      
      - name: Prepare release notes for Slack
        id: prepare-notes
        run: |
          # Run the script to prepare release notes for Slack
          RELEASE_BODY="${{ needs.release-please.outputs.body }}" \
          TAG_NAME="${{ needs.release-please.outputs.tag_name }}" \
          REPOSITORY="${{ github.repository }}" \
          node scripts/prepare-slack-message.js >> $GITHUB_OUTPUT
      
            - name: Post release notes to Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'bot-dev-test'
          payload: ${{ steps.prepare-notes.outputs.slack_payload }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
